from . import models

def mine_repo(args):
    extractor = models.GitExtractor()
    git_logs = dict()
    if(args.online):
        try:
            git_logs = extractor.get_online_logs(args.online)
        except FileNotFoundError as ex:
            print(ex)
            git_logs = dict()
    elif(args.local):
        try:
            git_logs = extractor.get_local_logs(args.local)
        except FileNotFoundError as ex:
            print(ex)
            git_logs = dict()

    return git_logs


def manage_cves(args):
    manager = models.CveManager()
    if args.download:
        manager.setup_cves()

    if args.database:
        manager.setup_database()

def get_stats(args):
    classifier =  models.CommitClassifier()
    cve_commits = classifier.get_cve_commits(mine_repo(args))
    classifier.validate_cve(cve_commits)
    for cve in cve_commits:
        print(cve)
        print(cve_commits[cve]['message'])
        