import pytest
import os

from cveminer.models import GitExtractor

class TestGitExtractor(object):

    @pytest.fixture
    def gitExtractor(self):
        gitExtractor = GitExtractor()
        return gitExtractor
    
    @pytest.fixture
    def baseDir(self):
        baseDir = os.getcwd()
        return baseDir

    def test_download_repo(self, gitExtractor, baseDir):
        gitExtractor.download_repo('wrongGitRepo')
        assert os.path.isdir('../repos') == True
        assert os.path.isdir('../repos/wrongGitRepo') == False
        os.chdir(baseDir)
        gitExtractor.download_repo('https://github.com/MBalazs8796/testing')
        os.chdir(baseDir)
        assert os.path.isdir('./repos') == True
        assert os.path.isdir('./repos/testing') == True

    def test_online_logs(self, gitExtractor, baseDir):
        with pytest.raises(FileNotFoundError):
            gitExtractor.get_online_logs('wrongGitRepo')

        logs = gitExtractor.get_online_logs('https://github.com/MBalazs8796/testing')
        # since git log parser is assumed to work correctly no further testing will be done
        assert len(logs) == 7
        assert isinstance(logs, list) == True
        assert os.getcwd() == baseDir



    def test_get_local_logs(self, gitExtractor, baseDir):
        print(baseDir)
        with pytest.raises(FileNotFoundError):
            gitExtractor.get_local_logs('./wrongGitRepo')
        logs = gitExtractor.get_local_logs('./repos/testing')
        assert len(logs) == 7
        assert isinstance(logs, list) == True
        assert os.getcwd() == baseDir
        